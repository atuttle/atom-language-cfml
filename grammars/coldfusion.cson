'fileTypes': [
  'cfm'
  'cfml'
  'cfc'
]
'injections':
  'meta.scope.tag.embedded.cfoutput.cfm - meta.tag.template.cfoutput.cfm':
    'patterns': [
      {
        'include': '#variable'
      }
      {
        'include': '#language'
      }
    ]
  'text.html.cfm - (meta.embedded.block | meta.embedded.line | meta.tag | comment)':
    'patterns': [
      {
        'include': '#language'
      }
    ]
'name': 'ColdFusion'
'patterns': [
  {
    'include': '#tag-finder'
  }
  {
    'begin': '<\\?(xml)'
    'captures':
      '1':
        'name': 'entity.name.tag.xml.html'
    'end': '\\?>'
    'name': 'meta.tag.preprocessor.xml.html'
    'patterns': [
      {
        'include': '#tag-generic-attribute'
      }
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
    ]
  }
  {
    'include': '#cfcomment'
  }
  {
    'include': '#htmlcomment'
  }
  {
    'begin': '<!'
    'end': '>'
    'name': 'meta.tag.sgml.html'
    'patterns': [
      {
        'begin': '(DOCTYPE)'
        'captures':
          '1':
            'name': 'entity.name.tag.doctype.html'
        'end': '(?=>)'
        'name': 'meta.tag.sgml.doctype.html'
        'patterns': [
          {
            'match': '"[^">]*"'
            'name': 'string.quoted.double.doctype.identifiers-and-DTDs.html'
          }
        ]
      }
      {
        'begin': '\\[CDATA\\['
        'end': ']](?=>)'
        'name': 'constant.other.inline-data.html'
      }
    ]
  }
  {
    'include': '#coldfusion-script'
  }
  {
    'include': '#cffunction'
  }
  {
    'begin': '(?:^\\s+)?<((?i:style))\\b(?![^>]*/>)'
    'captures':
      '1':
        'name': 'entity.name.tag.style.html'
    'end': '</((?i:style))>(?:\\s*\\n)?'
    'name': 'source.css.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'begin': '>'
        'end': '(?=</(?i:style))'
        'patterns': [
          {
            'include': 'source.css'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?:^\\s+)?<((?i:cfquery))\\b(?![^>]*/>)'
    'captures':
      '1':
        'name': 'entity.name.tag.script.html'
    'end': '</((?i:cfquery))>(?:\\s*\\n)?'
    'name': 'source.sql.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'begin': '>'
        'end': '(?=</(?i:cfquery))'
        'patterns': [
          {
            'include': 'source.sql'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?:^\\s+)?<((?i:script))\\b(?![^>]*/>)'
    'captures':
      '1':
        'name': 'entity.name.tag.script.html'
    'end': '(?<=</(script|SCRIPT))>(?:\\s*\\n)?'
    'name': 'source.js.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'begin': '(?<!</(?:script|SCRIPT))>'
        'end': '</((?i:script))'
        'patterns': [
          {
            'match': '//.*?((?=</script)|$\\n?)'
            'name': 'comment.line.double-slash.js'
          }
          {
            'begin': '/\\*'
            'end': '\\*/|(?=</script)'
            'name': 'comment.block.js'
          }
          {
            'include': 'source.js'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?:^\\s+)?(<)((?i:cfscript))\\b(?![^>]*/>)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.script.html'
    'end': '(?<=</(cfscript|CFSCRIPT))(>)(?:\\s*\\n)?'
    'endCaptures':
      '2':
        'name': 'punctuation.definition.tag.html'
    'name': 'source.js.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'begin': '(?<!</(?:cfscript|CFSCRIPT))(>)'
        'captures':
          '1':
            'name': 'punctuation.definition.tag.html'
          '2':
            'name': 'entity.name.tag.script.html'
        'end': '(</)((?i:cfscript))'
        'patterns': [
          {
            'captures':
              '1':
                'name': 'punctuation.definition.comment.js'
            'match': '(//).*?((?=</cfscript)|$\\n?)'
            'name': 'comment.line.double-slash.js'
          }
          {
            'begin': '/\\*'
            'captures':
              '0':
                'name': 'punctuation.definition.comment.js'
            'end': '\\*/|(?=</cfscript)'
            'name': 'comment.block.js'
          }
          {
            'include': 'source.js'
          }
        ]
      }
    ]
  }
  {
    'begin': '</?((?i:body|head|html)\\b)'
    'captures':
      '1':
        'name': 'entity.name.tag.structure.any.html'
    'end': '>'
    'name': 'meta.tag.structure.any.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
    ]
  }
  {
    'begin': '</?((?i:address|blockquote|dd|div|dl|dt|fieldset|form|frame|frameset|h1|h2 |h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|menu|pre)\\ b)'
    'captures':
      '1':
        'name': 'entity.name.tag.block.any.html'
    'end': '>'
    'name': 'meta.tag.block.any.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
    ]
  }
  {
    'begin': '</?((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite |code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|la bel|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script| select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot |th|thead|title|tr|tt|u|var)\\b)'
    'captures':
      '1':
        'name': 'entity.name.tag.inline.any.html'
    'end': '>'
    'name': 'meta.tag.inline.any.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
    ]
  }
  {
    'begin': '</?([a-zA-Z0-9:]+)'
    'captures':
      '1':
        'name': 'entity.name.tag.other.html'
    'end': '>'
    'name': 'meta.tag.other.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
    ]
  }
  {
    'include': '#entities'
  }
  {
    'match': '<>'
    'name': 'invalid.illegal.incomplete.html'
  }
  {
    'match': '<(?=\\W)|>'
    'name': 'invalid.illegal.bad-angle-bracket.html'
  }
]
'repository':
  'cfcomment':
    'begin': '<!---'
    'end': '---\\s*>'
    'name': 'comment.line'
    'patterns': [
      {
        'include': '#cfcomment'
      }
    ]
  'cffunction':
    'begin': '<(cffunction)'
    'captures':
      '1':
        'name': 'entity.name.tag.other.html'
    'end': '>'
    'name': 'meta.tag.other.html'
    'patterns': [
      {
        'captures':
          '0':
            'name': 'entity.other.attribute-name.html'
          '3':
            'name': 'punctuation.definition.string.begin'
          '4':
            'name': 'entity.name.function.cfml'
          '5':
            'name': 'punctuation.definition.string.end'
        'match': '\\b([nN][aA][mM][Ee])\\b\\s*(=)\\s*(["\'])([A-Za-z$_0-9]+)(["\'])'
      }
      {
        'include': 'source.cfml'
      }
      {
        'include': '#tag-stuff'
      }
    ]
  'coldfusion-script':
    'begin': '#'
    'end': '\\#'
    'name': 'source.coldfusion.embedded.html'
    'patterns': [
      {
        'include': '#inline-function-stuff'
      }
      {
        'include': '#embedded-code'
      }
    ]
  'embedded-code':
    'patterns': [
      {
        'include': '#javascript'
      }
    ]
  'entities':
    'patterns': [
      {
        'match': '&([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+);'
        'name': 'constant.character.entity.html'
      }
      {
        'match': '&'
        'name': 'invalid.illegal.bad-ampersand.html'
      }
    ]
  'htmlcomment':
    'begin': '<!--'
    'end': '-->'
    'name': 'comment.block.html'
    'patterns': [
      {
        'match': '--'
        'name': 'invalid.illegal.bad-comments-or-CDATA.html'
      }
    ]
  'inline-function-stuff':
    'begin': '[a-zA-Z0-9_\\.]+\\('
    'contentName': 'support.function.parameters'
    'end': '\\)'
    'name': 'support.function'
    'patterns': [
      {
        'include': '#inline-function-stuff'
      }
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
    ]
  'string-double-quoted':
    'begin': '"'
    'end': '"'
    'name': 'string.quoted.double.html'
    'patterns': [
      {
        'include': '#embedded-code'
      }
      {
        'include': '#entities'
      }
    ]
  'string-single-quoted':
    'begin': '\''
    'end': '\''
    'name': 'string.quoted.single.html'
    'patterns': [
      {
        'include': '#embedded-code'
      }
      {
        'include': '#entities'
      }
    ]
  'tag-finder':
    'begin': '<([a-zA-Z0-9:]+)(?=[^>]*></\\1>)'
    'beginCaptures':
      '1':
        'name': 'entity.name.tag.html'
    'end': '>(<)/(\\1)>'
    'endCaptures':
      '1':
        'name': 'meta.scope.between-tag-pair.html'
      '2':
        'name': 'entity.name.tag.html'
    'name': 'meta.tag.any.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
    ]
  'tag-generic-attribute':
    'patterns': [
      {
        'match': '\\b([a-zA-Z0-9_\\-:]+)'
        'name': 'entity.other.attribute-name.html'
      }
    ]
  'tag-id-attribute':
    'begin': '[^\\.]\\b(id)\\b\\s*='
    'captures':
      '1':
        'name': 'entity.other.attribute-name.id.html'
    'end': '(?<=\'|")'
    'name': 'meta.attribute-with-value.id.html'
    'patterns': [
      {
        'begin': '"'
        'contentName': 'meta.toc-list.id.html'
        'end': '"'
        'name': 'string.quoted.double.html'
        'patterns': [
          {
            'include': '#embedded-code'
          }
          {
            'include': '#entities'
          }
        ]
      }
      {
        'begin': '\''
        'contentName': 'meta.toc-list.id.html'
        'end': '\''
        'name': 'string.quoted.single.html'
        'patterns': [
          {
            'include': '#embedded-code'
          }
          {
            'include': '#entities'
          }
        ]
      }
    ]
  'tag-stuff':
    'patterns': [
      {
        'include': '#tag-id-attribute'
      }
      {
        'include': '#inline-function-stuff'
      }
      {
        'include': '#tag-generic-attribute'
      }
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
      {
        'include': '#coldfusion-script'
      }
      {
        'include': '#embedded-code'
      }
      {
        'match': '.var\\s'
        'name': 'variable.other'
      }
      {
        'begin': '.<cffunction\\sname=(\'|")1'
        'contentName': 'entity.name.function'
        'end': '\'|"1'
        'name': 'meta.tag.other'
      }
    ]
'scopeName': 'text.html.cfm'
